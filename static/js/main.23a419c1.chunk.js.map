{"version":3,"sources":["logo.svg","sorters/visualMergeSort.js","sorters/visualBubbleSort.js","sorters/visualQuickSort.js","visualsort/visualsort.jsx","sorters/visualHeapSort.js","sorters/visualCountingSort.js","sorters/visualCocktailShakerSort.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","visualMergeSort","array","animations","length","auxiliaryArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","i","j","push","doMerge","visualBubbleSort","len","reads","writes","visualQuickSort","quickSort","arr","left","right","pivot_i","pivot","partition","theme","createMuiTheme","palette","primary","deepOrange","secondary","green","SPEED","WIDTH","window","innerWidth","HEIGTH","innerHeight","DEFAULT_BAR_NUM","MAXVAL","MARKS_SPEED","value","label","valueLabelFormatSpeed","v","MARKS_BARS","valueLabelFormatBars","find","VisualSort","props","state","barNum","speed","generateArray","this","setState","multiplier","bars","document","getElementsByClassName","bar","style","backgroundColor","render","barOneIdx","barTwoIdx","barOneStyle","barTwoStyle","color","setTimeout","newHeight","height","readsText","writesText","prevs","innerText","console","log","type","indexes","values","styles","idx","prev","entries","doneAnimation","arr2heap","largest","heights","visualHeapSort","update","a","b","ha","hb","prev_a","prev_b","style1","style2","min","max","count","Array","fill","visualCountingSort","h","swapped","visualCocktailShakerSort","t","correct","sort","myarr","areArraysEqual","className","map","index","key","width","margin","Slider","defaultValue","valueLabelDisplay","valueLabelFormat","step","marks","onChangeCommitted","e","reset","pow","ButtonGroup","size","aria-label","Button","onClick","mergeSort","heapSort","bubbleSort","countingSort","cocktailShaker","React","Component","randomInt","random","MINVAL","randtemp","App","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.23a419c1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export function visualMergeSort(array) {\n  const animations = [];\n  if (array.length <= 1) return array;\n  const auxiliaryArray = array.slice();\n  mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\n  return animations;\n}\n\nfunction mergeSortHelper(\n  mainArray,\n  startIdx,\n  endIdx,\n  auxiliaryArray,\n  animations,\n) {\n  if (startIdx === endIdx) return;\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\n  mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\n  mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\n  doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\n}\n\nfunction doMerge(\n  mainArray,\n  startIdx,\n  middleIdx,\n  endIdx,\n  auxiliaryArray,\n  animations,\n) {\n  let k = startIdx;\n  let i = startIdx;\n  let j = middleIdx + 1;\n  while (i <= middleIdx && j <= endIdx) {\n    // These are the values that we're comparing; we push them once\n    // to change their color.\n    animations.push([i, j]);\n    // These are the values that we're comparing; we push them a second\n    // time to revert their color.\n    animations.push([i, j]);\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\n      // We overwrite the value at index k in the original array with the\n      // value at index i in the auxiliary array.\n      animations.push([k, auxiliaryArray[i]]);\n      mainArray[k++] = auxiliaryArray[i++];\n    } else {\n      // We overwrite the value at index k in the original array with the\n      // value at index j in the auxiliary array.\n      animations.push([k, auxiliaryArray[j]]);\n      mainArray[k++] = auxiliaryArray[j++];\n    }\n  }\n  while (i <= middleIdx) {\n    // These are the values that we're comparing; we push them once\n    // to change their color.\n    animations.push([i, i]);\n    // These are the values that we're comparing; we push them a second\n    // time to revert their color.\n    animations.push([i, i]);\n    // We overwrite the value at index k in the original array with the\n    // value at index i in the auxiliary array.\n    animations.push([k, auxiliaryArray[i]]);\n    mainArray[k++] = auxiliaryArray[i++];\n  }\n  while (j <= endIdx) {\n    // These are the values that we're comparing; we push them once\n    // to change their color.\n    animations.push([j, j]);\n    // These are the values that we're comparing; we push them a second\n    // time to revert their color.\n    animations.push([j, j]);\n    // We overwrite the value at index k in the original array with the\n    // value at index j in the auxiliary array.\n    animations.push([k, auxiliaryArray[j]]);\n    mainArray[k++] = auxiliaryArray[j++];\n  }\n}\n","// export function visualBubbleSort(that){\n//\n//   array = that.state.array;\n//   let len = array.length;\n//   let reads = 0;\n//   let writes = 0;\n//\n//   for (let i=0; i<len; i++){\n//     for (let j=0; j<len-i-1; j++){\n//       animations.push([0,j,j+1,array[j],array[j+1],reads,writes]);\n//       reads += 1\n//       if (array[j] > array[j+1]){\n//         animations.push([1,j,j+1,array[j],array[j+1],reads,writes]);\n//         [array[j], array[j+1]] = [array[j+1],array[j]];\n//         writes += 1\n//         animations.push([1,j,j+1,array[j],array[j+1],reads,writes]);\n//         animations.push([0,j,j+1,array[j],array[j+1],reads,writes]);\n//       }\n//     }\n//   }\n//   // console.log(array);\n//   return animations\n// }\n\n\n\n\n\n\n\n\n\n\nexport function visualBubbleSort(array){\n  let animations = []; //[type, i, j, arr[i], arr[j], reads, writes] 0=read, 1=write\n  let len = array.length;\n  let reads = 0;\n  let writes = 0;\n\n  for (let i=0; i<len; i++){\n    for (let j=0; j<len-i-1; j++){\n      animations.push([0,j,j+1,array[j],array[j+1],reads,writes]);\n      reads += 1\n      if (array[j] > array[j+1]){\n        animations.push([1,j,j+1,array[j],array[j+1],reads,writes]);\n        [array[j], array[j+1]] = [array[j+1],array[j]];\n        writes += 1\n        animations.push([1,j,j+1,array[j],array[j+1],reads,writes]);\n        animations.push([0,j,j+1,array[j],array[j+1],reads,writes]);\n      }\n    }\n  }\n  // console.log(array);\n  return animations\n}\n","export function visualQuickSort(array){\n\n  let animations = []; // [type, [i,j,k], [arr[i,j,k]], reads, writes] 0=read, 1=write 2=pivot\n  let reads = 0;\n  let writes = 0;\n\n  function partition(arr, left, right){\n    let pivot_i = Math.floor((left+right)/2);\n    let pivot = arr[pivot_i];\n    let i = left;\n    let j = right;\n\n    reads += 1;\n    animations.push([2, [pivot_i], [arr[pivot_i]], reads, writes]);\n\n    while (i <= j){\n\n      while (arr[i] < pivot){\n        reads += 1\n        animations.push([0, [i], [arr[i]], reads, writes]);\n\n        i++;\n      }\n\n      while (arr[j] > pivot){\n        reads += 1\n        animations.push([0, [j], [arr[j]], reads, writes]);\n\n        j--;\n      }\n\n      if (i <= j){\n\n        animations.push([0, [i,j], [arr[i],arr[j]], reads, writes]);\n        animations.push([1, [i,j], [arr[i],arr[j]], reads, writes]);\n\n        [arr[i],arr[j]] = [arr[j],arr[i]];\n\n        reads += 2;\n        writes += 2;\n        animations.push([1, [i,j], [arr[i],arr[j]], reads, writes]);\n        animations.push([0, [i,j], [arr[i],arr[j]], reads, writes]);\n        \n        i++;\n        j--;\n      }\n    }\n    return i;\n  }\n\n  function quickSort(arr, left, right){\n    let i;\n\n    if (arr.length > 1){\n      i = partition(arr, left, right);\n    }\n\n    if (left < i-1){\n      quickSort(arr, left, i-1);\n    }\n\n    if (i < right){\n      quickSort(arr, i, right);\n    }\n  }\n\n\n  quickSort(array, 0, array.length -1, animations, reads, writes);\n\n  return animations;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './visualsort.css';\nimport {visualMergeSort} from '../sorters/visualMergeSort.js';\nimport {visualBubbleSort} from '../sorters/visualBubbleSort.js';\nimport {visualCountingSort} from '../sorters/visualCountingSort.js';\nimport {visualHeapSort} from '../sorters/visualHeapSort.js';\nimport {visualQuickSort} from '../sorters/visualQuickSort.js';\nimport {visualCocktailShakerSort} from '../sorters/visualCocktailShakerSort.js';\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\n// import Typography from '@material-ui/core/Typography';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport green from '@material-ui/core/colors/green';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: deepOrange,\n    secondary: green,\n  },\n});\n\nconst BAR_COLOR = \"#79B6F2\";\nconst READ_COLOR = \"#98C379\";\nconst WRITE_COLOR = \"#E06B75\";\nconst DONE_COLOR = \"#C578DD\";\nconst INPOSITION_COLOR = \"#C578DD\";\nconst PIVOT_COLOR = \"#F7DC6F\";\n\nconst SPEED = [1000,100,10,1,0.1]; //animation speed in ms\n\nconst WIDTH = window.innerWidth;\nconst HEIGTH = window.innerHeight;\n\nconst DEFAULT_BAR_NUM = Math.floor(WIDTH/1536*350); //350 number of bars in full screen;\nconst MINVAL = 5;\nconst MAXVAL = Math.floor(HEIGTH/872*750); //750 pixel in height when fullscreen\n\nconst MARKS_SPEED = [{value:0,label:\"slomo\"},{value:1,label:\"slow\"},{value:2,label:\"mid\"},{value:3,label:\"fast\"},{value:4,label:\"turbo\"}];\nfunction valueLabelFormatSpeed(v){\n    return MARKS_SPEED[v].label;\n}\n\nconst MARKS_BARS = [{value:1,label:\"5%\"},{value:2,label:\"12%\"},\n  {value:3,label:\"25%\"},{value:4,label:\"50%\"},{value:5,label:\"100%\"},\n  {value:6,label:\"200%\"},{value:7,label:\"400%\"}];\nfunction valueLabelFormatBars(v){\n    return MARKS_BARS.find(MARKS_BARS => MARKS_BARS.value == v).label;\n}\n\n\nexport default class VisualSort extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      array: [],\n      barNum: DEFAULT_BAR_NUM,\n      speed: 3,\n    };\n  }\n\n  componentDidMount(){\n    const array = generateArray(this.state.barNum);\n    this.setState({array});\n  }\n\n  reset(multiplier = 1){\n    let bars = document.getElementsByClassName('bar');\n    for (let bar of bars){\n      bar.style.backgroundColor = BAR_COLOR;\n    }\n    let barNum = DEFAULT_BAR_NUM * multiplier;\n    const array = generateArray(barNum);\n    this.setState({array,barNum});\n    this.render();\n  }\n\n  mergeSort(){\n    const animations = visualMergeSort(this.state.array);\n\n    for (let i = 0; i < animations.length; i++) {\n      // console.log(animations[i]);\n      const bars = document.getElementsByClassName('bar');\n      const isColorChange = i % 3 !== 2;\n\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = bars[barOneIdx].style;\n        const barTwoStyle = bars[barTwoIdx].style;\n        const color = i % 3 === 0 ? BAR_COLOR : READ_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * SPEED);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = bars[barOneIdx].style;\n          barOneStyle.height = `${newHeight}px`;\n        }, i * SPEED);\n      }\n    }\n  }\n\n  quickSort(){\n    const animations = visualQuickSort(this.state.array);\n\n    let bars = document.getElementsByClassName('bar');\n    let readsText = document.getElementsByClassName('complexity-text-reads');\n    let writesText = document.getElementsByClassName('complexity-text-writes');\n\n    let prevs = animations[0][1];\n\n    let complexity = document.getElementsByClassName('complexity-text-complexity');\n    complexity[0].innerText = \"O(NlogN)\";\n\n    for (let i = 0; i < animations.length; i++) {\n\n      console.log(animations[i]);\n\n      let [type, indexes, values ,reads, writes] = animations[i];\n      let styles = [];\n      let color;\n\n      for (let idx of indexes){\n        styles.push(bars[idx].style);\n      }\n\n      if (type == 0){\n        color = READ_COLOR;\n      }\n      else if (type == 1){\n        color = WRITE_COLOR;\n      }\n      else if (type == 2){\n        color = PIVOT_COLOR;\n      }\n\n      setTimeout(() => {\n        // console.log(animations[i])\n        for (let prev of prevs){\n          bars[prev].style.backgroundColor = BAR_COLOR;\n        }\n        prevs = indexes;\n\n        for (let [idx,style] of styles.entries()){\n          style.backgroundColor = color;\n          style.height = `${values[idx]}px`;\n        }\n\n        readsText[0].innerText = reads;\n        writesText[0].innerText = writes;\n      }, i * SPEED[this.state.speed])\n    }\n\n    setTimeout(() => {\n      for (let prev of prevs){\n        bars[prev].style.backgroundColor = BAR_COLOR;\n      }\n      this.doneAnimation(0);\n    }, animations.length * SPEED[this.state.speed])\n  }\n\n  heapSort() {\n    const animations = visualHeapSort(this.state.array);\n\n    let bars = document.getElementsByClassName('bar');\n    let readsText = document.getElementsByClassName('complexity-text-reads');\n    let writesText = document.getElementsByClassName('complexity-text-writes');\n\n    let prevs = animations[0][1];\n\n    let complexity = document.getElementsByClassName('complexity-text-complexity');\n    complexity[0].innerText = \"O(NlogN)\";\n\n    for (let i = 0; i < animations.length; i++) {\n      let [type, indexes, values ,reads, writes] = animations[i];\n      let styles = [];\n      let color;\n      let update = false;\n\n      for (let idx of indexes){\n        styles.push(bars[idx].style);\n      }\n\n      if (type == 0){\n        color = READ_COLOR;\n        update = true;\n      }\n      else if (type == 1){\n        color = WRITE_COLOR;\n      }\n      else if (type == 2){\n        color = READ_COLOR;\n      }\n\n      setTimeout(() => {\n        // console.log(animations[i])\n        if (update){\n          for (let prev of prevs){\n            bars[prev].style.backgroundColor = BAR_COLOR;\n          }\n          prevs = indexes;\n        }\n\n        for (let [idx,style] of styles.entries()){\n          style.backgroundColor = color;\n          style.height = `${values[idx]}px`;\n        }\n\n        readsText[0].innerText = reads;\n        writesText[0].innerText = writes;\n      }, i * SPEED[this.state.speed])\n    }\n\n    setTimeout(() => {\n      for (let prev of prevs){\n        bars[prev].style.backgroundColor = BAR_COLOR;\n      }\n      this.doneAnimation(0);\n    }, animations.length * SPEED[this.state.speed])\n  }\n\n  bubbleSortNEW(){\n    visualBubbleSort()\n  }\n\n  bubbleSort(){\n    const animations = visualBubbleSort(this.state.array);\n    let bars = document.getElementsByClassName('bar');\n    let prev = animations[0].slice(1,3);\n    let readsText = document.getElementsByClassName('complexity-text-reads');\n    let writesText = document.getElementsByClassName('complexity-text-writes');\n    let complexity = document.getElementsByClassName('complexity-text-complexity');\n\n    complexity[0].innerText = \"O(N^2)\";\n\n    for (let i = 0; i < animations.length; i++) {\n      let [type,a,b,ha,hb,reads,writes] = animations[i];\n      let [prev_a, prev_b] = prev;\n      const style1 = bars[a].style;\n      const style2 = bars[b].style;\n      let color;\n\n      if (type == 0){ // 0=read\n        color = READ_COLOR;\n      }\n      else if (type == 1){ // 1=write\n        color = WRITE_COLOR;\n      }\n      setTimeout(() => {\n        bars[prev_a].style.backgroundColor = BAR_COLOR;\n        bars[prev_b].style.backgroundColor = BAR_COLOR;\n        style1.backgroundColor = color;\n        style2.backgroundColor = color;\n        style1.height = `${ha}px`;\n        style2.height = `${hb}px`;\n        readsText[0].innerText = reads;\n        writesText[0].innerText = writes;\n      }, i* SPEED[this.state.speed]);\n\n      prev = [a,b];\n    }\n\n    setTimeout(() => {\n      bars[prev[0]].style.backgroundColor = BAR_COLOR;\n      bars[prev[1]].style.backgroundColor = BAR_COLOR;\n      this.doneAnimation(0);\n    }, animations.length * SPEED[this.state.speed])\n  }\n\n  countingSort(){\n    let animations = visualCountingSort(this.state.array,MINVAL,MAXVAL);\n\n    let bars = document.getElementsByClassName('bar');\n    let prev = animations[0][1];\n    let readsText = document.getElementsByClassName('complexity-text-reads');\n    let writesText = document.getElementsByClassName('complexity-text-writes');\n    let complexity = document.getElementsByClassName('complexity-text-complexity');\n\n    complexity[0].innerText = \"O(N)\";\n\n    for (let i = 0; i < animations.length; i++) {\n      let [type,a,h,reads,writes] = animations[i];\n      let color;\n\n      if (type == 0){ // 0=read\n        color = READ_COLOR;\n      }\n      else if (type == 1){ // 1=write\n        color = WRITE_COLOR;\n      }\n      setTimeout(() => {\n        bars[prev].style.backgroundColor = BAR_COLOR;\n        bars[a].style.backgroundColor = color;\n        prev = a;\n        bars[a].style.height = `${h}px`;\n        readsText[0].innerText = reads;\n        writesText[0].innerText = writes;\n      }, i* SPEED[this.state.speed]);\n\n    }\n\n    setTimeout(() => {\n      bars[prev].style.backgroundColor = BAR_COLOR;\n      this.doneAnimation(0);\n    }, animations.length * SPEED[this.state.speed])\n\n\n  }\n\n  cocktailShaker(){\n    let animations = visualCocktailShakerSort(this.state.array);\n\n    let bars = document.getElementsByClassName('bar');\n    let readsText = document.getElementsByClassName('complexity-text-reads');\n    let writesText = document.getElementsByClassName('complexity-text-writes');\n\n    let prev = animations[0].slice(1,3);\n\n    let complexity = document.getElementsByClassName('complexity-text-complexity');\n    complexity[0].innerText = \"O(N^2)\";\n\n    for (let i = 0; i < animations.length; i++) {\n      let [type,a,b,ha,hb,reads,writes] = animations[i];\n      let [prev_a, prev_b] = prev;\n      const style1 = bars[a].style;\n      const style2 = bars[b].style;\n      let color;\n\n      if (type == 0){ // 0=read\n        color = READ_COLOR;\n      }\n      else if (type == 1){ // 1=write\n        color = WRITE_COLOR;\n      }\n      setTimeout(() => {\n        bars[prev_a].style.backgroundColor = BAR_COLOR;\n        bars[prev_b].style.backgroundColor = BAR_COLOR;\n        style1.backgroundColor = color;\n        style2.backgroundColor = color;\n        style1.height = `${ha}px`;\n        style2.height = `${hb}px`;\n        readsText[0].innerText = reads;\n        writesText[0].innerText = writes;\n      }, i* SPEED[this.state.speed]);\n\n      prev = [a,b];\n    }\n\n    setTimeout(() => {\n      bars[prev[0]].style.backgroundColor = BAR_COLOR;\n      bars[prev[1]].style.backgroundColor = BAR_COLOR;\n      this.doneAnimation(0);\n    }, animations.length * SPEED[this.state.speed])\n  }\n\n  doneAnimation(t){\n    let bars = document.getElementsByClassName('bar');\n    for (let i = 0; i < this.state.array.length; i++){\n      setTimeout(() => {\n        bars[i].style.backgroundColor = DONE_COLOR;\n      }, t+ i * SPEED[this.state.speed]/3);\n    }\n  }\n\n  test() { //NOT TO USE WITH VISUAL SORTING, NEED ACTUAL ARRAY\n    let arr = generateArray(1000);\n    const correct = arr.slice().sort((a, b) => a - b);\n    const myarr = visualMergeSort(arr.slice());\n    console.log(areArraysEqual(correct, myarr));\n  }\n\n  render(){\n    const {array} = this.state;\n    const {barNum} = this.state;\n\n    return (\n      <MuiThemeProvider theme={theme}>\n      <>\n      <div className=\"bar-container\">\n      {array.map((value, index) => (\n        <div\n        className=\"bar\"\n        key={index}\n        style = {{\n          height: `${value}px`,\n          width: `${2/ (barNum/DEFAULT_BAR_NUM)}px`,\n          margin: `${1/ (barNum/DEFAULT_BAR_NUM)}px`,\n          backgroundColor : BAR_COLOR,\n        }}></div>\n      ))}\n      </div>\n\n      <div className=\"buttons-bar\">\n\n        <div className=\"buttons-bar-text\">\n          Set array size: <br></br>\n          Choose sorting algorithm: <br></br>\n          Set speed level: <br></br>\n        </div>\n\n        <div className=\"buttons-bar-button\">\n          <div className=\"buttons-bar-slider\">\n            <Slider\n              defaultValue={5}\n              valueLabelDisplay=\"auto\"\n              valueLabelFormat={valueLabelFormatBars}\n              step\n              marks\n              min={1}\n              max={7}\n              onChangeCommitted={(e,v) => this.reset(Math.pow(2,v-5))} />\n          </div>\n\n          <ButtonGroup color=\"primary\" size=\"small\" aria-label=\"small outlined button group\">\n            <Button onClick={() => this.mergeSort()}>Merge Sort</Button>\n            <Button onClick={() => this.quickSort()}>Quick Sort</Button>\n            <Button onClick={() => this.heapSort()}>Heap Sort</Button>\n            <Button onClick={() => this.bubbleSort()}>Bubble Sort</Button>\n            <Button onClick={() => this.countingSort()}>Counting Sort</Button>\n            <Button onClick={() => this.cocktailShaker()}>Cocktail Shaker</Button>\n          </ButtonGroup>\n\n          <div className=\"buttons-bar-slider\">\n            <Slider\n              defaultValue={3}\n              valueLabelDisplay=\"auto\"\n              valueLabelFormat={valueLabelFormatSpeed}\n              step\n              marks\n              min={0}\n              max={4}\n              onChangeCommitted={(e,v) => this.state.speed = v} />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"complexity-bar\">\n        <div className=\"complexity-text\">\n          Complexity: <br></br>\n          Number of reads: <br></br>\n          Number of writes:\n        </div>\n\n        <div className=\"complexity-text-complexity\">O(n*n)</div>\n        <div className=\"complexity-text-reads\">0</div>\n        <div className=\"complexity-text-writes\">0</div>\n      </div>\n      </>\n\n    </MuiThemeProvider>\n    )\n  }\n}\n\nfunction randomInt(min, max) {\n  // min is included, max is not included\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nfunction generateArray(len = DEFAULT_BAR_NUM) {\n    let array = [MAXVAL,MINVAL]; // min and max are always present\n\n    for (let i=0; i<len-2; i++){\n      array.push(randomInt(MINVAL+1, MAXVAL));\n    }\n    let randtemp = randomInt(2,len);\n    [array[0] , array[randtemp]] = [array[randtemp], array[0]];\n    randtemp = randomInt(1,len);\n    [array[1] , array[randtemp]] = [array[randtemp], array[1]];\n    return array;\n  }\n\nfunction areArraysEqual(a, b) {\n    if (a.length !== b.length) return false;\n\n    for (let i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n","export function visualHeapSort(array){\n  let animations = []; //[type, [i,j,k], [arr[i,j,k]], reads, writes] 0=read, 1=write 2=read in same sequence, no update color or prev\n  let len = array.length;\n  let reads = 0;\n  let writes = 0;\n\n\n  function arr2heap(arr, len, i, animations){\n    let largest = i;\n    let left = i*2 + 1;\n    let right = left + 1;\n\n    reads += 1;\n    let indexes = [i];\n    let heights = [arr[i]];\n\n    if (left < len && arr[left] > arr[largest]){\n      largest = left;\n      reads += 1;\n      indexes.push(left);\n      heights.push(arr[left]);\n    }\n\n    if (right < len && arr[right] > arr[largest]){\n      largest = right;\n      reads += 1;\n      indexes.push(right);\n      heights.push(arr[right]);\n    }\n\n    animations.push([0, indexes, heights, reads, writes]);\n\n    if (largest != i) {\n      animations.push([1, [i,largest], [arr[i],arr[largest]], reads, writes]);\n\n      [arr[largest], arr[i]] = [arr[i], arr[largest]];\n      writes += 2\n\n      animations.push([1, [i,largest], [arr[i],arr[largest]], reads, writes]);\n      animations.push([2, [i,largest], [arr[i],arr[largest]], reads, writes]);\n\n      arr2heap(arr, len, largest, animations, reads, writes);\n    }\n\n    return arr;\n  }\n\n\n\n  let i = Math.floor(len/2 - 1); //last parent node, halfway-1\n  let k = len - 1; // last child\n\n  while (i>=0){\n    arr2heap(array, len, i, animations, reads, writes);\n    i--;\n  }\n\n  while (k >= 0){\n    reads += 2;\n    writes += 2;\n    animations.push([0, [0,k], [array[0],array[k]], reads, writes]);\n    animations.push([1, [0,k], [array[0],array[k]], reads, writes]);\n    [array[0],array[k]] = [array[k],array[0]];\n    animations.push([1, [0,k], [array[0],array[k]], reads, writes]);\n    animations.push([0, [0,k], [array[0],array[k]], reads, writes]);\n\n    arr2heap(array, k, 0, animations);\n    k--;\n  }\n\n  return animations;\n}\n","export function visualCountingSort(array,min,max){\n  let count = new Array(max+1).fill(0);\n  let animations = [];\n  let reads = 0;\n  let writes = 0;\n\n  for (let i=0; i<array.length; i++){\n    let pos = array[i];\n    count[pos] += 1;\n    reads++;\n    animations.push([0,i,array[i],reads,writes]);\n  }\n\n  let j = 0;\n  for (let i=min; i<=max+1; i++){\n    while (count[i]>0){\n      array[j] = i;\n      writes++;\n      animations.push([1,j,i,reads,writes]);\n      j++;\n      count[i]--;\n    }\n  }\n  return animations\n}\n","export function visualCocktailShakerSort(array){\n  let animations = []; //[type, i, j, arr[i], arr[j], reads, writes] 0=read, 1=write\n  let reads = 0;\n  let writes = 0;\n  let swapped;\n\n\tdo {\n\t\tfor (let i = 0; i < array.length - 2; i++) {\n\t\t\tif(array[i] > array[i+1]) {\n        reads += 2;\n        writes += 2;\n        animations.push([0,i,i+1,array[i],array[i+1],reads,writes]);\n        animations.push([1,i,i+1,array[i],array[i+1],reads,writes]);\n\t\t\t\t[array[i],array[i+1]] = [array[i+1],array[i]];\n        animations.push([1,i,i+1,array[i],array[i+1],reads,writes]);\n        animations.push([0,i,i+1,array[i],array[i+1],reads,writes]);\n\t\t\t\tswapped = true;\n\t\t\t}\n      else {\n        reads += 2;\n        animations.push([0,i,i+1,array[i],array[i+1],reads,writes]);\n      }\n\t\t}\n\n\t\tif(!swapped) {\n\t\t\tbreak;\n\t\t}\n\n\t\tswapped = false;\n\t\tfor(let i = array.length - 2; i > 0; i--) {\n\t\t\tif(array[i] > array[i+1]) {\n        reads += 2;\n        writes += 2;\n        animations.push([0,i,i+1,array[i],array[i+1],reads,writes]);\n        animations.push([1,i,i+1,array[i],array[i+1],reads,writes]);\n        [array[i],array[i+1]] = [array[i+1],array[i]];\n        animations.push([1,i,i+1,array[i],array[i+1],reads,writes]);\n        animations.push([0,i,i+1,array[i],array[i+1],reads,writes]);\n\t\t\t\tswapped = true;\n\t\t\t}\n      else {\n        reads += 2;\n        animations.push([0,i,i+1,array[i],array[i+1],reads,writes]);\n      }\n\n\t\t}\n\t} while(swapped);\n\n  return animations;\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport VisualSort from './visualsort/visualsort';\nimport './App.css';\nimport ReactDOM from 'react-dom'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <VisualSort></VisualSort>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}